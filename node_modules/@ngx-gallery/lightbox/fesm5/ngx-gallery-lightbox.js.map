{"version":3,"file":"ngx-gallery-lightbox.js.map","sources":["ng://@ngx-gallery/lightbox/lightbox.component.ts","ng://@ngx-gallery/lightbox/lightbox.token.ts","ng://@ngx-gallery/lightbox/lightbox.default.ts","ng://@ngx-gallery/lightbox/lightbox.service.ts","ng://@ngx-gallery/lightbox/lightbox.module.ts"],"sourcesContent":["import { Component, ChangeDetectionStrategy, HostBinding, HostListener } from '@angular/core';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { OverlayRef } from '@angular/cdk/overlay';\r\n\r\n@Component({\r\n  selector: 'lightbox',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n  animations: [\r\n    trigger('slideDialog', [\r\n      state('in', style({transform: 'translateY(0%) scale(1)', opacity: 1})),\r\n      transition(':enter', [\r\n        style({transform: 'translateY(25%) scale(0.9)', opacity: 0}),\r\n        animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')\r\n      ]),\r\n      transition(':leave', [\r\n        animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)',\r\n          style({transform: 'translateY(25%)', opacity: 0})\r\n        )\r\n      ]),\r\n    ])\r\n  ],\r\n  template: `\r\n    <gallery [id]=\"id\" [destroyRef]=\"false\">\r\n      <button class=\"g-btn-close\" (click)=\"overlayRef.detach()\"></button>\r\n    </gallery>\r\n  `\r\n})\r\nexport class LightboxComponent {\r\n\r\n  id: string;\r\n  overlayRef: OverlayRef;\r\n\r\n  @HostBinding('@slideDialog') slideAnimation;\r\n\r\n  @HostListener('@slideDialog.done', ['$event']) onMouseLeave(e) {\r\n    if (e.toState === 'void') {\r\n      this.overlayRef.dispose();\r\n    }\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { LightboxConfig } from './lightbox.model';\r\n\r\nexport const LIGHTBOX_CONFIG = new InjectionToken<LightboxConfig>('lightboxConfig');\r\n","import { LightboxConfig } from './lightbox.model';\r\n\r\nexport const defaultConfig: LightboxConfig = {\r\n  backdropClass: 'g-backdrop',\r\n  panelClass: 'g-overlay',\r\n  hasBackdrop: true,\r\n  keyboardShortcuts: true\r\n};\r\n","import { ComponentRef, Inject, Injectable } from '@angular/core';\r\n\r\nimport { Gallery } from '@ngx-gallery/core';\r\nimport { LIGHTBOX_CONFIG } from './lightbox.token';\r\nimport { LightboxConfig } from './lightbox.model';\r\nimport { defaultConfig } from './lightbox.default';\r\nimport { LightboxComponent } from './lightbox.component';\r\n\r\nimport { Overlay, OverlayRef, OverlayConfig } from '@angular/cdk/overlay';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { LEFT_ARROW, RIGHT_ARROW, ESCAPE } from '@angular/cdk/keycodes';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n@Injectable()\r\nexport class Lightbox {\r\n\r\n  // Lightbox overlay ref\r\n  private _overlayRef: OverlayRef;\r\n\r\n  // Global config\r\n  private _config: LightboxConfig;\r\n\r\n  // Stream that emits when lightbox is opened\r\n  opened = new Subject<string>();\r\n\r\n  // Stream that emits when lightbox is closed\r\n  closed = new Subject<string>();\r\n\r\n  constructor(@Inject(LIGHTBOX_CONFIG) config: LightboxConfig, private _gallery: Gallery, private _overlay: Overlay) {\r\n    this._config = {...defaultConfig, ...config};\r\n  }\r\n\r\n  /**\r\n   * Set Lightbox Config\r\n   * @param config - LightboxConfig\r\n   */\r\n  setConfig(config: LightboxConfig) {\r\n    this._config = {...this._config, ...config};\r\n  }\r\n\r\n  /**\r\n   * Open Lightbox Overlay\r\n   * @param i - Current Index\r\n   * @param id - Gallery ID\r\n   * @param config - Lightbox Config\r\n   */\r\n  open(i = 0, id = 'lightbox', config?: LightboxConfig) {\r\n\r\n    const _config = config ? {...this._config, ...config} : this._config;\r\n\r\n    const overlayConfig: OverlayConfig = {\r\n      backdropClass: _config.backdropClass,\r\n      panelClass: _config.panelClass,\r\n      hasBackdrop: _config.hasBackdrop,\r\n      positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),\r\n      scrollStrategy: this._overlay.scrollStrategies.block()\r\n    };\r\n\r\n    const galleryRef = this._gallery.ref(id);\r\n    galleryRef.set(i);\r\n\r\n    this._overlayRef = this._overlay.create(overlayConfig);\r\n\r\n    // overlay opened event\r\n    this._overlayRef.attachments().subscribe(() => this.opened.next(id));\r\n\r\n    // overlay closed event\r\n    this._overlayRef.detachments().subscribe(() => this.closed.next(id));\r\n\r\n    // Attach gallery to the overlay\r\n    const galleryPortal = new ComponentPortal(LightboxComponent);\r\n    const lightboxRef: ComponentRef<LightboxComponent> = this._overlayRef.attach(galleryPortal);\r\n\r\n    lightboxRef.instance.id = id;\r\n    lightboxRef.instance.overlayRef = this._overlayRef;\r\n\r\n    if (_config.hasBackdrop) {\r\n      this._overlayRef.backdropClick().subscribe(() => this.close());\r\n    }\r\n\r\n    if (_config.keyboardShortcuts) {\r\n      this._overlayRef.keydownEvents().subscribe((event) => {\r\n        switch (event.keyCode) {\r\n          case LEFT_ARROW:\r\n            galleryRef.prev(id);\r\n            break;\r\n          case RIGHT_ARROW:\r\n            galleryRef.next(id);\r\n            break;\r\n          case ESCAPE:\r\n            this.close();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Close Lightbox Overlay\r\n   */\r\n  close() {\r\n    if (this._overlayRef.hasAttached()) {\r\n      this._overlayRef.detach();\r\n    }\r\n  }\r\n}\r\n","import { InjectionToken, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\r\nimport { Gallery, GalleryModule } from '@ngx-gallery/core';\r\n\r\nimport { LightboxConfig } from './lightbox.model';\r\nimport { LIGHTBOX_CONFIG } from './lightbox.token';\r\nimport { Lightbox } from './lightbox.service';\r\nimport { LightboxComponent } from './lightbox.component';\r\n\r\nexport function lightboxFactory(config: LightboxConfig, gallery: Gallery, overlay: Overlay) {\r\n  return new Lightbox(config, gallery, overlay);\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    OverlayModule,\r\n    GalleryModule\r\n  ],\r\n  declarations: [\r\n    LightboxComponent\r\n  ],\r\n  entryComponents: [\r\n    LightboxComponent\r\n  ]\r\n})\r\nexport class LightboxModule {\r\n  static forRoot(config?: LightboxConfig) {\r\n\r\n    return {\r\n      ngModule: LightboxModule,\r\n      providers: [\r\n        {\r\n          provide: LIGHTBOX_CONFIG,\r\n          useValue: config\r\n        },\r\n        {\r\n          provide: Lightbox,\r\n          useFactory: lightboxFactory,\r\n          deps: [LIGHTBOX_CONFIG, Gallery, Overlay]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}
