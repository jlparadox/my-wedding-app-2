/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Directive, Input, ComponentFactoryResolver, ViewContainerRef } from '@angular/core';
export class GalleryItemDirective {
    /**
     * @param {?} componentFactoryResolver
     * @param {?} viewContainerRef
     */
    constructor(componentFactoryResolver, viewContainerRef) {
        this.componentFactoryResolver = componentFactoryResolver;
        this.viewContainerRef = viewContainerRef;
        this.type = 'slide';
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        const /** @type {?} */ componentFactory = this.componentFactoryResolver
            .resolveComponentFactory(this.item[this.type === 'slide' ? 'component' : 'thumbComponent']);
        this.viewContainerRef.clear();
        const /** @type {?} */ componentRef = this.viewContainerRef.createComponent(componentFactory);
        const /** @type {?} */ galleryItem = componentRef.instance;
        galleryItem.data = this.item.data;
    }
}
GalleryItemDirective.decorators = [
    { type: Directive, args: [{
                selector: '[item]'
            },] },
];
/** @nocollapse */
GalleryItemDirective.ctorParameters = () => [
    { type: ComponentFactoryResolver, },
    { type: ViewContainerRef, },
];
GalleryItemDirective.propDecorators = {
    "item": [{ type: Input },],
    "type": [{ type: Input },],
};
function GalleryItemDirective_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    GalleryItemDirective.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    GalleryItemDirective.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    GalleryItemDirective.propDecorators;
    /** @type {?} */
    GalleryItemDirective.prototype.item;
    /** @type {?} */
    GalleryItemDirective.prototype.type;
    /** @type {?} */
    GalleryItemDirective.prototype.componentFactoryResolver;
    /** @type {?} */
    GalleryItemDirective.prototype.viewContainerRef;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FsbGVyeS1pdGVtLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZ3gtZ2FsbGVyeS9jb3JlLyIsInNvdXJjZXMiOlsiZGlyZWN0aXZlcy9nYWxsZXJ5LWl0ZW0uZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULEtBQUssRUFFTCx3QkFBd0IsRUFDeEIsZ0JBQWdCLEVBQ2pCLE1BQU0sZUFBZSxDQUFDO0FBTXZCLE1BQU07Ozs7O0lBS0osWUFBb0Isd0JBQWtELEVBQ2xEO1FBREEsNkJBQXdCLEdBQXhCLHdCQUF3QixDQUEwQjtRQUNsRCxxQkFBZ0IsR0FBaEIsZ0JBQWdCO29CQUhELE9BQU87S0FJekM7Ozs7SUFFRCxRQUFRO1FBQ04sdUJBQU0sZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLHdCQUF3QjthQUNuRCx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEtBQUssT0FBTyxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQztRQUM5RixJQUFJLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDOUIsdUJBQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxlQUFlLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUM3RSx1QkFBTSxXQUFXLEdBQXlCLFlBQVksQ0FBQyxRQUFRLENBQUM7UUFDaEUsV0FBVyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztLQUNuQzs7O1lBbkJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsUUFBUTthQUNuQjs7OztZQVBDLHdCQUF3QjtZQUN4QixnQkFBZ0I7OztxQkFTZixLQUFLO3FCQUNMLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIERpcmVjdGl2ZSxcclxuICBJbnB1dCxcclxuICBPbkluaXQsXHJcbiAgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLFxyXG4gIFZpZXdDb250YWluZXJSZWZcclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgR2FsbGVyeUl0ZW0sIEdhbGxlcnlJdGVtQ29tcG9uZW50IH0gZnJvbSAnLi4vbW9kZWxzJztcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnW2l0ZW1dJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgR2FsbGVyeUl0ZW1EaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICBASW5wdXQoKSBpdGVtOiBHYWxsZXJ5SXRlbTtcclxuICBASW5wdXQoKSB0eXBlOiAnc2xpZGUnIHwgJ3RodW1iJyA9ICdzbGlkZSc7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY29tcG9uZW50RmFjdG9yeVJlc29sdmVyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsXHJcbiAgICAgICAgICAgICAgcHJpdmF0ZSB2aWV3Q29udGFpbmVyUmVmOiBWaWV3Q29udGFpbmVyUmVmKSB7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIGNvbnN0IGNvbXBvbmVudEZhY3RvcnkgPSB0aGlzLmNvbXBvbmVudEZhY3RvcnlSZXNvbHZlclxyXG4gICAgICAucmVzb2x2ZUNvbXBvbmVudEZhY3RvcnkodGhpcy5pdGVtW3RoaXMudHlwZSA9PT0gJ3NsaWRlJyA/ICdjb21wb25lbnQnIDogJ3RodW1iQ29tcG9uZW50J10pO1xyXG4gICAgdGhpcy52aWV3Q29udGFpbmVyUmVmLmNsZWFyKCk7XHJcbiAgICBjb25zdCBjb21wb25lbnRSZWYgPSB0aGlzLnZpZXdDb250YWluZXJSZWYuY3JlYXRlQ29tcG9uZW50KGNvbXBvbmVudEZhY3RvcnkpO1xyXG4gICAgY29uc3QgZ2FsbGVyeUl0ZW06IEdhbGxlcnlJdGVtQ29tcG9uZW50ID0gY29tcG9uZW50UmVmLmluc3RhbmNlO1xyXG4gICAgZ2FsbGVyeUl0ZW0uZGF0YSA9IHRoaXMuaXRlbS5kYXRhO1xyXG4gIH1cclxuXHJcbn1cclxuIl19