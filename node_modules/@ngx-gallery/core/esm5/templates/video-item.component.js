/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
var VideoItemComponent = /** @class */ (function () {
    function VideoItemComponent(sanitizer) {
        this.sanitizer = sanitizer;
    }
    VideoItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'video-item',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    preserveWhitespaces: false,
                    template: "\n    <video controls\n           [src]=\"sanitizer.bypassSecurityTrustResourceUrl(data?.src)\"\n           [poster]=\"sanitizer.bypassSecurityTrustResourceUrl(data?.poster)\"></video>\n  ",
                    styles: ["\n    video {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n  "]
                },] },
    ];
    /** @nocollapse */
    VideoItemComponent.ctorParameters = function () { return [
        { type: DomSanitizer, },
    ]; };
    VideoItemComponent.propDecorators = {
        "data": [{ type: Input },],
    };
    return VideoItemComponent;
}());
export { VideoItemComponent };
function VideoItemComponent_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    VideoItemComponent.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    VideoItemComponent.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    VideoItemComponent.propDecorators;
    /** @type {?} */
    VideoItemComponent.prototype.data;
    /** @type {?} */
    VideoItemComponent.prototype.sanitizer;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlkZW8taXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4LWdhbGxlcnkvY29yZS8iLCJzb3VyY2VzIjpbInRlbXBsYXRlcy92aWRlby1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDJCQUEyQixDQUFDOztJQXdCdkQsNEJBQW1CLFNBQXVCO1FBQXZCLGNBQVMsR0FBVCxTQUFTLENBQWM7S0FDekM7O2dCQXRCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLFlBQVk7b0JBQ3RCLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUMvQyxtQkFBbUIsRUFBRSxLQUFLO29CQUMxQixRQUFRLEVBQUUsOExBSVQ7b0JBQ0QsTUFBTSxFQUFFLENBQUMsOEZBTVIsQ0FBQztpQkFDSDs7OztnQkFuQlEsWUFBWTs7O3lCQXNCbEIsS0FBSzs7NkJBdkJSOztTQXFCYSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEb21TYW5pdGl6ZXIgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcclxuaW1wb3J0IHsgR2FsbGVyeUl0ZW1Db21wb25lbnQgfSBmcm9tICcuLi9tb2RlbHMnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICd2aWRlby1pdGVtJyxcclxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcclxuICBwcmVzZXJ2ZVdoaXRlc3BhY2VzOiBmYWxzZSxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPHZpZGVvIGNvbnRyb2xzXHJcbiAgICAgICAgICAgW3NyY109XCJzYW5pdGl6ZXIuYnlwYXNzU2VjdXJpdHlUcnVzdFJlc291cmNlVXJsKGRhdGE/LnNyYylcIlxyXG4gICAgICAgICAgIFtwb3N0ZXJdPVwic2FuaXRpemVyLmJ5cGFzc1NlY3VyaXR5VHJ1c3RSZXNvdXJjZVVybChkYXRhPy5wb3N0ZXIpXCI+PC92aWRlbz5cclxuICBgLFxyXG4gIHN0eWxlczogW2BcclxuICAgIHZpZGVvIHtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgfVxyXG4gIGBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBWaWRlb0l0ZW1Db21wb25lbnQgaW1wbGVtZW50cyBHYWxsZXJ5SXRlbUNvbXBvbmVudCB7XHJcblxyXG4gIEBJbnB1dCgpIGRhdGE6IGFueTtcclxuXHJcbiAgY29uc3RydWN0b3IocHVibGljIHNhbml0aXplcjogRG9tU2FuaXRpemVyKSB7XHJcbiAgfVxyXG59XHJcbiJdfQ==