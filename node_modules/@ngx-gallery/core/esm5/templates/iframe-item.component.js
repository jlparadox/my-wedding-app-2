/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
var IframeItemComponent = /** @class */ (function () {
    function IframeItemComponent(sanitizer) {
        this.sanitizer = sanitizer;
    }
    IframeItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'iframe-item',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    preserveWhitespaces: false,
                    template: "\n    <iframe frameborder=\"0\"\n            allowfullscreen\n            [src]=\"sanitizer.bypassSecurityTrustResourceUrl(data?.src)\"></iframe>\n  ",
                    styles: ["\n    iframe {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n  "]
                },] },
    ];
    /** @nocollapse */
    IframeItemComponent.ctorParameters = function () { return [
        { type: DomSanitizer, },
    ]; };
    IframeItemComponent.propDecorators = {
        "data": [{ type: Input },],
    };
    return IframeItemComponent;
}());
export { IframeItemComponent };
function IframeItemComponent_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IframeItemComponent.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IframeItemComponent.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    IframeItemComponent.propDecorators;
    /** @type {?} */
    IframeItemComponent.prototype.data;
    /** @type {?} */
    IframeItemComponent.prototype.sanitizer;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWZyYW1lLWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG5neC1nYWxsZXJ5L2NvcmUvIiwic291cmNlcyI6WyJ0ZW1wbGF0ZXMvaWZyYW1lLWl0ZW0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7O0lBd0J2RCw2QkFBbUIsU0FBdUI7UUFBdkIsY0FBUyxHQUFULFNBQVMsQ0FBYztLQUN6Qzs7Z0JBdEJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsYUFBYTtvQkFDdkIsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07b0JBQy9DLG1CQUFtQixFQUFFLEtBQUs7b0JBQzFCLFFBQVEsRUFBRSx1SkFJVDtvQkFDRCxNQUFNLEVBQUUsQ0FBQywrRkFNUixDQUFDO2lCQUNIOzs7O2dCQW5CUSxZQUFZOzs7eUJBc0JsQixLQUFLOzs4QkF2QlI7O1NBcUJhLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IERvbVNhbml0aXplciB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xyXG5pbXBvcnQgeyBHYWxsZXJ5SXRlbUNvbXBvbmVudCB9IGZyb20gJy4uL21vZGVscyc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2lmcmFtZS1pdGVtJyxcclxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcclxuICBwcmVzZXJ2ZVdoaXRlc3BhY2VzOiBmYWxzZSxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPGlmcmFtZSBmcmFtZWJvcmRlcj1cIjBcIlxyXG4gICAgICAgICAgICBhbGxvd2Z1bGxzY3JlZW5cclxuICAgICAgICAgICAgW3NyY109XCJzYW5pdGl6ZXIuYnlwYXNzU2VjdXJpdHlUcnVzdFJlc291cmNlVXJsKGRhdGE/LnNyYylcIj48L2lmcmFtZT5cclxuICBgLFxyXG4gIHN0eWxlczogW2BcclxuICAgIGlmcmFtZSB7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIGhlaWdodDogMTAwJTtcclxuICAgIH1cclxuICBgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgSWZyYW1lSXRlbUNvbXBvbmVudCBpbXBsZW1lbnRzIEdhbGxlcnlJdGVtQ29tcG9uZW50IHtcclxuXHJcbiAgQElucHV0KCkgZGF0YTtcclxuXHJcbiAgY29uc3RydWN0b3IocHVibGljIHNhbml0aXplcjogRG9tU2FuaXRpemVyKSB7XHJcbiAgfVxyXG59XHJcbiJdfQ==