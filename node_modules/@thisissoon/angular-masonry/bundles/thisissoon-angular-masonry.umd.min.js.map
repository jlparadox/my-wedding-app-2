{"version":3,"sources":["ng://@thisissoon/angular-masonry/app/masonry/masonry-ref.ts","ng://@thisissoon/angular-masonry/app/masonry/masonry-token.ts","ng://@thisissoon/angular-masonry/app/masonry/masonry.module.ts"],"names":["MasonryRef","element","options","layout","destroy","stamp","unstamp","appended","prepended","addItems","remove","on","off","once","reloadItems","getItemElements","Masonry","InjectionToken","defaultProviders","provide","useValue","MasonryModule","forRoot","providers","ngModule","NgModule"],"mappings":"mUAOA,SAAAA,EACEC,EACAC,GAEA,OACEC,OAAQ,WAAM,OAAA,MACdC,QAAS,WAAM,OAAA,MACfC,MAAO,WAAM,OAAA,MACbC,QAAS,WAAM,OAAA,MACfC,SAAU,WAAM,OAAA,MAChBC,UAAW,WAAM,OAAA,MACjBC,SAAU,WAAM,OAAA,MAChBC,OAAQ,WAAM,OAAA,MACdC,GAAI,WAAM,OAAA,MACVC,IAAK,WAAM,OAAA,MACXC,KAAM,WAAM,OAAA,MACZC,YAAa,WAAM,OAAA,MACnBC,gBAAiB,WAAM,OAAA,OCxB3B,IAEaC,EAAU,IAAIC,EAAAA,eAAuB,WCG5CC,IAAsBC,QAASH,EAASI,SAAUpB,sCAiBxCqB,EAAAC,iBACZC,GAEA,YAFA,IAAAA,IAAAA,EAAAL,IAGEM,SAAUH,EACVE,UAAWA,wBAdhBE,EAAAA","sourcesContent":["import { MasonryOptions } from './masonry-options.model';\nimport { MasonryInstance } from './masonry-instance.model';\n\n/**\n * An implemenation of the masonry library to be used\n * as a dummy when running on a server\n */\nexport function MasonryRef(\n  element: string | HTMLElement,\n  options: MasonryOptions\n): MasonryInstance {\n  return {\n    layout: () => null,\n    destroy: () => null,\n    stamp: () => null,\n    unstamp: () => null,\n    appended: () => null,\n    prepended: () => null,\n    addItems: () => null,\n    remove: () => null,\n    on: () => null,\n    off: () => null,\n    once: () => null,\n    reloadItems: () => null,\n    getItemElements: () => null\n  };\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const Masonry = new InjectionToken<string>('Masonry');\n","import { NgModule, ModuleWithProviders, Provider } from '@angular/core';\n\nimport { MasonryRef } from './masonry-ref';\nimport { Masonry } from './masonry-token';\n\nconst defaultProviders = [{ provide: Masonry, useValue: MasonryRef }];\n\n/**\n * A simple lightweight module to use Masonry layout in Angular\n *\n * {@link https://masonry.desandro.com/}\n *\n */\n@NgModule()\nexport class MasonryModule {\n  /**\n   * Specify a static method for root module to ensure providers\n   * are only provided once but allows the module to still be imported\n   * into other modules without reproviding services.\n   *\n   * @memberof MasonryModule\n   */\n  public static forRoot(\n    providers: Provider[] = defaultProviders\n  ): ModuleWithProviders {\n    return {\n      ngModule: MasonryModule,\n      providers: providers\n    };\n  }\n}\n"]}