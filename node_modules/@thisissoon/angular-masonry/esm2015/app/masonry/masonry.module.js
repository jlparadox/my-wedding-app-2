/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { NgModule } from '@angular/core';
import { MasonryRef } from './masonry-ref';
import { Masonry } from './masonry-token';
const ɵ0 = MasonryRef;
const /** @type {?} */ defaultProviders = [{ provide: Masonry, useValue: ɵ0 }];
/**
 * A simple lightweight module to use Masonry layout in Angular
 *
 * {\@link https://masonry.desandro.com/}
 *
 */
export class MasonryModule {
    /**
     * Specify a static method for root module to ensure providers
     * are only provided once but allows the module to still be imported
     * into other modules without reproviding services.
     *
     * \@memberof MasonryModule
     * @param {?=} providers
     * @return {?}
     */
    static forRoot(providers = defaultProviders) {
        return {
            ngModule: MasonryModule,
            providers: providers
        };
    }
}
MasonryModule.decorators = [
    { type: NgModule },
];
function MasonryModule_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    MasonryModule.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    MasonryModule.ctorParameters;
}
export { ɵ0 };

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFzb25yeS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGhpc2lzc29vbi9hbmd1bGFyLW1hc29ucnkvIiwic291cmNlcyI6WyJhcHAvbWFzb25yeS9tYXNvbnJ5Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBaUMsTUFBTSxlQUFlLENBQUM7QUFFeEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0saUJBQWlCLENBQUM7V0FFYyxVQUFVO0FBQWxFLHVCQUFNLGdCQUFnQixHQUFHLENBQUMsRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLFFBQVEsSUFBWSxFQUFFLENBQUMsQ0FBQzs7Ozs7OztBQVN0RSxNQUFNOzs7Ozs7Ozs7O0lBUUcsTUFBTSxDQUFDLE9BQU8sQ0FDbkIsWUFBd0IsZ0JBQWdCO1FBRXhDLE1BQU0sQ0FBQztZQUNMLFFBQVEsRUFBRSxhQUFhO1lBQ3ZCLFNBQVMsRUFBRSxTQUFTO1NBQ3JCLENBQUM7Ozs7WUFmTCxRQUFRIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMsIFByb3ZpZGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IE1hc29ucnlSZWYgfSBmcm9tICcuL21hc29ucnktcmVmJztcbmltcG9ydCB7IE1hc29ucnkgfSBmcm9tICcuL21hc29ucnktdG9rZW4nO1xuXG5jb25zdCBkZWZhdWx0UHJvdmlkZXJzID0gW3sgcHJvdmlkZTogTWFzb25yeSwgdXNlVmFsdWU6IE1hc29ucnlSZWYgfV07XG5cbi8qKlxuICogQSBzaW1wbGUgbGlnaHR3ZWlnaHQgbW9kdWxlIHRvIHVzZSBNYXNvbnJ5IGxheW91dCBpbiBBbmd1bGFyXG4gKlxuICoge0BsaW5rIGh0dHBzOi8vbWFzb25yeS5kZXNhbmRyby5jb20vfVxuICpcbiAqL1xuQE5nTW9kdWxlKClcbmV4cG9ydCBjbGFzcyBNYXNvbnJ5TW9kdWxlIHtcbiAgLyoqXG4gICAqIFNwZWNpZnkgYSBzdGF0aWMgbWV0aG9kIGZvciByb290IG1vZHVsZSB0byBlbnN1cmUgcHJvdmlkZXJzXG4gICAqIGFyZSBvbmx5IHByb3ZpZGVkIG9uY2UgYnV0IGFsbG93cyB0aGUgbW9kdWxlIHRvIHN0aWxsIGJlIGltcG9ydGVkXG4gICAqIGludG8gb3RoZXIgbW9kdWxlcyB3aXRob3V0IHJlcHJvdmlkaW5nIHNlcnZpY2VzLlxuICAgKlxuICAgKiBAbWVtYmVyb2YgTWFzb25yeU1vZHVsZVxuICAgKi9cbiAgcHVibGljIHN0YXRpYyBmb3JSb290KFxuICAgIHByb3ZpZGVyczogUHJvdmlkZXJbXSA9IGRlZmF1bHRQcm92aWRlcnNcbiAgKTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBNYXNvbnJ5TW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBwcm92aWRlcnNcbiAgICB9O1xuICB9XG59XG4iXX0=